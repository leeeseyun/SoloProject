<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.seyun.mapper.BoardMapper">


	<select id="getList" resultType="com.seyun.domain.BoardVO">
		<![CDATA[select*from tbl_board where bno > 0]]>
	</select>
	
	<!-- <select id="getListWithPaging" resultType="com.seyun.domain.BoardVO">
		select @rownum:=@rownum+1 as rn, bno, title, content, writer, regdate, updatedate from tbl_board, (select @rownum:=0)A
		order by rn desc limit #{offset}, #{amount}
	</select> -->
	
	<sql id="criteria">
		<where>
			<trim prefix="(" suffix=")" prefixOverrides="OR">
				<foreach item='type' collection='typeArr'>
					<trim prefix="OR" suffixOverrides="and">
						<choose>
							<when test="type == 'T'.toString()">
								title like CONCAT('%', #{keyword}, '%')
							</when>
							<when test="type == 'C'.toString()">
								content like CONCAT('%', #{keyword}, '%')
							</when>
							<when test="type == 'W'.toString()">
								writer like CONCAT('%', #{keyword}, '%')
							</when>
						</choose>
					</trim>
				</foreach>
			</trim>
		</where>
	</sql>
	
	<insert id="insert" useGeneratedKeys="true" keyProperty="bno">
		insert into tbl_board (title, content, writer, category) values (#{title}, #{content}, #{writer}, #{category})
	</insert>
	
	<update id="update">
		update tbl_board set title=#{title}, content=#{content} where bno = #{bno}
	</update>
	
	<select id="read" resultType="com.seyun.domain.BoardVO">
		select*from tbl_board where bno = #{bno}
	</select>
	
	<delete id="delete">
		delete from tbl_board where bno = #{bno};
	</delete>
	
	<select id="getTotalCountCommunity" resultType="int">
		select count(*) from tbl_board 
		where
		<trim suffix="and" prefixOverrides="WHERE">
			<include refid="criteria"></include>
		</trim>
		bno > 0 and category = 'community'
	</select>
	
	<select id="getListWithPagingCommunity" resultType="com.seyun.domain.BoardVO">
		select @rownum:=@rownum+1 as rn, bno, title, content, writer, 
		regdate, updatedate, replycnt, category from tbl_board, (select @rownum:=0 )A
		where category = 'community'
		<trim prefix="and" prefixOverrides="WHERE">
		<include refid="criteria"></include>
		</trim>
		order by rn desc LIMIT #{offset}, #{amount}
	</select>
	
	<select id="getTotalCountEvent" resultType="int">
		select count(*) from tbl_board 
		where
		<trim suffix="and" prefixOverrides="WHERE">
			<include refid="criteria"></include>
		</trim>
		bno > 0 and category = 'event'
	</select>
	
	<select id="getListWithPagingEvent" resultType="com.seyun.domain.BoardVO">
		select @rownum:=@rownum+1 as rn, bno, title, content, writer, 
		regdate, updatedate, replycnt, category from tbl_board, (select @rownum:=0 )A
		where category = 'event'
		<trim prefix="and" prefixOverrides="WHERE">
		<include refid="criteria"></include>
		</trim>
		order by rn desc LIMIT #{offset}, #{amount}
	</select>
	
	<select id="getTotalCountNotice" resultType="int">
		select count(*) from tbl_board 
		where
		<trim suffix="and" prefixOverrides="WHERE">
			<include refid="criteria"></include>
		</trim>
		bno > 0 and category = 'notice'
	</select>
	
	<select id="getListWithPagingNotice" resultType="com.seyun.domain.BoardVO">
		select @rownum:=@rownum+1 as rn, bno, title, content, writer, 
		regdate, updatedate, replycnt, category from tbl_board, (select @rownum:=0 )A
		where category = 'notice'
		<trim prefix="and" prefixOverrides="WHERE">
		<include refid="criteria"></include>
		</trim>
		order by rn desc LIMIT #{offset}, #{amount}
	</select>
	
	<update id="updateReplyCnt">
		update tbl_board set replycnt = replycnt + #{amount} where bno = #{bno}
	</update>
	
	<update id="updateLikeCnt">
		update tbl_board set likecnt = likecnt + #{likeAmount} where bno = #{bno}
	</update>
		
	<select id="getNewEvent" resultType="com.seyun.domain.BoardVO">
		select * from tbl_board where category = 'event' order by bno desc limit 1
	</select>	
	
	<select id="getNewNotice" resultType="com.seyun.domain.BoardVO">
		select * from tbl_board where category = 'notice' order by bno desc limit 1
	</select>
</mapper>